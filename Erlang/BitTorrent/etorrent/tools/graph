#!/usr/bin/env escript
% -*- Mode: Erlang; -*-
-import(lists, [prefix/2]).

a2l(Atom) ->
    atom_to_list(Atom).

write_to(Dir, Filename, Prefix) ->
    xref:start(s),
    xref:add_directory(s, Dir),
    {ok, Calls} = xref:q(s, "XC"),


    AllMods = lists:usort([{a2l(From), a2l(To)}
                           || {{From,_,_}, {To,_,_}} <- Calls,
                              From =/= To]),
    io:format("~p~n", [AllMods]),
    PrefMods = prefixed(Prefix, AllMods),
    Mods = ordsets:from_list(PrefMods),

    {Remaining, Clusters} = build_cluster(Mods,
                                          [
                                           "etorrent_torrent",
                                           "etorrent_dht",
                                           "etorrent_peer",
                                           "etorrent_upnp",
                                           "etorrent_http",
                                           "etorrent_udp",
                                           "etorrent_io"
                                           ], []),
    Graph = graph(Remaining),

    file:write_file(
      Filename,
      ["digraph G { ", $\n,
       header(),
       Clusters,
       Graph,
       [" }", $\n]]).

prefixed(P, All) ->
     [{F, T} || {F, T} <- All,
		prefix(P, F), prefix(P, T)].

graph(Mods) ->
    [[$\t, From, " -> ", To, " ; ", $\n] || {From, To} <- Mods].

build_cluster(Mods, [], Acc) -> {Mods, Acc};
build_cluster(Mods, [Cls | R], Acc) ->
    NM = prefixed(Cls, Mods),
    Txt = ["subgraph cluster_", Cls, " {",
           "style=rounded; penwidth=3; "
	   "label = ", Cls, $;,
	   "color = deepskyblue4;",
	   "fontsize = 14",
	   graph(NM), $}, $\n],
    build_cluster(Mods -- NM, R, [Txt | Acc]).

header() ->
    ["node [fontname=\"URW Gothic L\",fontsize=12,shape=plaintext,labelfontname=Helvetica];",
     "rankdir=LR; labeljust = l; nodesep=1.2; ranksep=1.2; ",
     "labelloc = t;",
     "fontsize = 24;",
     "fontname=\"URW Gothic L\";",
     "concentrate=true;",
     "label = \"Etorrent dependency graph\""].

main([Dir, Filename, Prefix]) ->
    write_to(Dir, Filename, Prefix).













